image: docker:latest

variables:
  api: "http://localhost:3005"
  # docker in docker specific
  DOCKER_DRIVER: overlay2
  # project vars
  REGISTRY_URL: "registry.gitlab.com/feup-tbs/ldso18-19/t3g1"

services:
  - docker:dind

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - .jest
  - mobile/node_modules/
  - server/node_modules/
  - web-app/node_modules/

stages:
  - lint
  - test
  - build
  - deploy
  - cleanup

lint_mobile:
  image: node:alpine
  stage: lint
  before_script:
    - cd mobile
    - yarn
  script:
    - yarn run lint

lint_web:
  image: node:alpine
  stage: lint
  before_script:
    - cd web-app
    - yarn
  script:
    - yarn run lint

lint_server:
  image: node:alpine
  stage: lint
  before_script:
    - cd server
    - npm install
  script:
    - npm run lint

test_mobile:
  image: node:alpine
  stage: test
  before_script:
  - cd mobile
  - printenv >> .env
  - yarn
  script:
    - yarn test

test_server:
  image: node:alpine
  stage: test
  before_script:
  - cd server
  - npm install
  script:
    - npm run test

test_web:
  image: node:alpine
  stage: test
  before_script:
  - cd web-app
  - yarn
  script:
    - yarn jest

build_server:
  image: docker:stable
  stage: build
  before_script:
    - cd server
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $REGISTRY_URL/server:$CI_COMMIT_REF_NAME .
    - docker push $REGISTRY_URL/server:$CI_COMMIT_REF_NAME
  only:
    - master
    - develop

build_web:
  image: docker:stable
  stage: build
  before_script:
    - cd web-app
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $REGISTRY_URL/web-app:$CI_COMMIT_REF_NAME .
    - docker push $REGISTRY_URL/web-app:$CI_COMMIT_REF_NAME
  only:
    - master
    - develop

build_mobile:
  image: docker:stable
  stage: build
  before_script:
    - cd mobile
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $REGISTRY_URL/mobile:$CI_COMMIT_REF_NAME .
    - docker push $REGISTRY_URL/mobile:$CI_COMMIT_REF_NAME
  only:
    - master
    - develop

deploy_mobile:
  image: node:alpine
  stage: deploy
  before_script:
    - cd mobile
    - printenv >> .env
    - yarn
  script:
    - apk add --no-cache bash
    - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD
    - npx expo build:android --non-interactive --release-channel "$CI_COMMIT_REF_NAME"    # expo build generates apk on expo's server and deploys to expo's site
  only:
    - master
    - develop
  environment:
    name: mobile/$CI_COMMIT_REF_NAME
    url: https://expo.io/@ldsot3g1/impact-up?release-channel=$CI_COMMIT_REF_NAME

deploy_all:
  image: alpine:latest
  stage: deploy
  before_script:
    - apk update && apk add openssh-client sshpass
  script:
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no andre@impactup.westeurope.cloudapp.azure.com "sh /home/andre/LDSO/deploy.sh"
  only:
    - master
    - develop
 