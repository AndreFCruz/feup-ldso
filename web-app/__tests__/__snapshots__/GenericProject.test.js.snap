// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot renders without crashing 1`] = `
<div>
  <div
    className="intro"
  >
    <img
      alt="application logo"
      src="test-file-stub"
      width="140"
    />
  </div>
  <div>
    <div
      className="navigator"
    >
      <h6
        className="fadeup"
      >
        <a
          aria-current={null}
          href="/faculties/fadeup"
          onClick={[Function]}
        >
          FADEUP
        </a>
      </h6>
      <h6
        className="faup"
      >
        <a
          aria-current={null}
          href="/faculties/faup"
          onClick={[Function]}
        >
          FAUP
        </a>
      </h6>
      <h6
        className="fbaup"
      >
        <a
          aria-current={null}
          href="/faculties/fbaup"
          onClick={[Function]}
        >
          FBAUP
        </a>
      </h6>
      <h6
        className="fcnaup"
      >
        <a
          aria-current={null}
          href="/faculties/fcnaup"
          onClick={[Function]}
        >
          FCNAUP
        </a>
      </h6>
      <h6
        className="fcup"
      >
        <a
          aria-current={null}
          href="/faculties/fcup"
          onClick={[Function]}
        >
          FCUP
        </a>
      </h6>
      <h6
        className="fdup"
      >
        <a
          aria-current={null}
          href="/faculties/fdup"
          onClick={[Function]}
        >
          FDUP
        </a>
      </h6>
      <h6
        className="fep"
      >
        <a
          aria-current={null}
          href="/faculties/fep"
          onClick={[Function]}
        >
          FEP
        </a>
      </h6>
      <h6
        className="feup"
      >
        <a
          aria-current={null}
          href="/faculties/feup"
          onClick={[Function]}
        >
          FEUP
        </a>
      </h6>
      <h6
        className="ffup"
      >
        <a
          aria-current={null}
          href="/faculties/ffup"
          onClick={[Function]}
        >
          FFUP
        </a>
      </h6>
      <h6
        className="flup"
      >
        <a
          aria-current={null}
          href="/faculties/flup"
          onClick={[Function]}
        >
          FLUP
        </a>
      </h6>
      <h6
        className="fmdup"
      >
        <a
          aria-current={null}
          href="/faculties/fmdup"
          onClick={[Function]}
        >
          FMDUP
        </a>
      </h6>
      <h6
        className="fmup"
      >
        <a
          aria-current={null}
          href="/faculties/fmup"
          onClick={[Function]}
        >
          FMUP
        </a>
      </h6>
      <h6
        className="fpceup"
      >
        <a
          aria-current={null}
          href="/faculties/fpceup"
          onClick={[Function]}
        >
          FPCEUP
        </a>
      </h6>
      <h6
        className="icbas"
      >
        <a
          aria-current={null}
          href="/faculties/icbas"
          onClick={[Function]}
        >
          ICBAS
        </a>
      </h6>
    </div>
    <div
      className="container null"
    >
      <div>
        <h1>
          Redirect to App login or another admin page
        </h1>
      </div>
    </div>
  </div>
  <div
    className="notification-container notification-container-empty"
  >
    <span />
  </div>
</div>
`;

exports[`renders correct project 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <withRouter(GenericProject)
    add={false}
    delAction={[Function]}
    faculty="feup"
    loading={false}
    mainAction={[Function]}
    projEN=""
    projPT=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
