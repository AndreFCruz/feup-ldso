// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot renders without crashing 1`] = `
<div>
  <div
    className="loginContainer"
  >
    <div
      className="cssTool"
    />
    <div
      className="login"
    >
      <div
        className="logo"
      >
        <img
          alt="application logo"
          src="test-file-stub"
          width="140"
        />
      </div>
      <form
        className="form"
      >
        <div
          className="col"
        >
          <div
            className="position-relative form-group"
          >
            <label
              className=""
              htmlFor="username"
            >
              Username
            </label>
            <input
              className="form-control"
              id="username"
              name="username"
              onChange={[Function]}
              placeholder="Enter Username"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          className="col"
        >
          <div
            className="position-relative form-group"
          >
            <label
              className=""
              htmlFor="username"
            >
              Password
            </label>
            <input
              className="form-control"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
          </div>
          <button
            aria-label={null}
            className="loginBtn  btn btn-success"
            onClick={[Function]}
            type="button"
          >
            Log in
          </button>
        </div>
      </form>
    </div>
  </div>
  <div
    className="notification-container notification-container-empty"
  >
    <span />
  </div>
</div>
`;

exports[`renders sidebar correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Col
        className="searchBar"
        tag="div"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <FontAwesomeIcon
          border={false}
          className="search-icon"
          fixedWidth={false}
          flip={null}
          icon="search"
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          title=""
          transform={null}
        />
        <DebounceInput
          className="form-control"
          debounceTimeout={1000}
          element="input"
          forceNotifyByEnter={true}
          forceNotifyOnBlur={true}
          minLength={2}
          onChange={[Function]}
          placeholder="search"
          type="text"
        />
      </Col>,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <FontAwesomeIcon
            border={false}
            className="search-icon"
            fixedWidth={false}
            flip={null}
            icon="search"
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            symbol={false}
            title=""
            transform={null}
          />,
          <DebounceInput
            className="form-control"
            debounceTimeout={1000}
            element="input"
            forceNotifyByEnter={true}
            forceNotifyOnBlur={true}
            minLength={2}
            onChange={[Function]}
            placeholder="search"
            type="text"
          />,
        ],
        "className": "searchBar",
        "tag": "div",
        "widths": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "border": false,
            "className": "search-icon",
            "fixedWidth": false,
            "flip": null,
            "icon": "search",
            "inverse": false,
            "listItem": false,
            "mask": null,
            "pull": null,
            "pulse": false,
            "rotation": null,
            "size": null,
            "spin": false,
            "symbol": false,
            "title": "",
            "transform": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "form-control",
            "debounceTimeout": 1000,
            "element": "input",
            "forceNotifyByEnter": true,
            "forceNotifyOnBlur": true,
            "inputRef": undefined,
            "minLength": 2,
            "onBlur": undefined,
            "onChange": [Function],
            "onKeyDown": undefined,
            "placeholder": "search",
            "type": "text",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Col
          className="searchBar"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          <FontAwesomeIcon
            border={false}
            className="search-icon"
            fixedWidth={false}
            flip={null}
            icon="search"
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            symbol={false}
            title=""
            transform={null}
          />
          <DebounceInput
            className="form-control"
            debounceTimeout={1000}
            element="input"
            forceNotifyByEnter={true}
            forceNotifyOnBlur={true}
            minLength={2}
            onChange={[Function]}
            placeholder="search"
            type="text"
          />
        </Col>,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FontAwesomeIcon
              border={false}
              className="search-icon"
              fixedWidth={false}
              flip={null}
              icon="search"
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              symbol={false}
              title=""
              transform={null}
            />,
            <DebounceInput
              className="form-control"
              debounceTimeout={1000}
              element="input"
              forceNotifyByEnter={true}
              forceNotifyOnBlur={true}
              minLength={2}
              onChange={[Function]}
              placeholder="search"
              type="text"
            />,
          ],
          "className": "searchBar",
          "tag": "div",
          "widths": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "border": false,
              "className": "search-icon",
              "fixedWidth": false,
              "flip": null,
              "icon": "search",
              "inverse": false,
              "listItem": false,
              "mask": null,
              "pull": null,
              "pulse": false,
              "rotation": null,
              "size": null,
              "spin": false,
              "symbol": false,
              "title": "",
              "transform": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "form-control",
              "debounceTimeout": 1000,
              "element": "input",
              "forceNotifyByEnter": true,
              "forceNotifyOnBlur": true,
              "inputRef": undefined,
              "minLength": 2,
              "onBlur": undefined,
              "onChange": [Function],
              "onKeyDown": undefined,
              "placeholder": "search",
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
