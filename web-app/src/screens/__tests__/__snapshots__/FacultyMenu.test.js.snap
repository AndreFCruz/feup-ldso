// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot renders without crashing 1`] = `
<div>
  <div
    className="loginContainer"
  >
    <div
      className="cssTool"
    />
    <div
      className="login"
    >
      <div
        className="logo"
      >
        <img
          alt="application logo"
          src="test-file-stub"
          width="140"
        />
      </div>
      <form
        className="form"
      >
        <div
          className="col"
        >
          <div
            className="position-relative form-group"
          >
            <label
              className=""
              htmlFor="username"
            >
              Username
            </label>
            <input
              className="form-control"
              id="username"
              name="username"
              onChange={[Function]}
              placeholder="Enter Username"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          className="col"
        >
          <div
            className="position-relative form-group"
          >
            <label
              className=""
              htmlFor="username"
            >
              Password
            </label>
            <input
              className="form-control"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
          </div>
          <button
            aria-label={null}
            className="loginBtn  btn btn-success"
            onClick={[Function]}
            type="button"
          >
            Log in
          </button>
        </div>
      </form>
    </div>
  </div>
  <div
    className="notification-container notification-container-empty"
  >
    <span />
  </div>
</div>
`;

exports[`Faculty Menu screen tests calls componentDidMount without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FacultyMenu
    match={
      Object {
        "params": Object {
          "faculty": "feup",
        },
      }
    }
    resetProjects={[Function]}
    setFaculty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <MenuLink
          link="/faculties/feup/projects"
          title="Social Impact Projects"
        />,
        <MenuLink
          link="/faculties/feup/videos"
          title="Promotional Videos"
        />,
        <MenuLink
          link="/faculties/feup/prospects"
          title="Future Plans"
        />,
      ],
      "style": Object {
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-around",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/faculties/feup/projects",
          "title": "Social Impact Projects",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/faculties/feup/videos",
          "title": "Promotional Videos",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/faculties/feup/prospects",
          "title": "Future Plans",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <MenuLink
            link="/faculties/feup/projects"
            title="Social Impact Projects"
          />,
          <MenuLink
            link="/faculties/feup/videos"
            title="Promotional Videos"
          />,
          <MenuLink
            link="/faculties/feup/prospects"
            title="Future Plans"
          />,
        ],
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-around",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/faculties/feup/projects",
            "title": "Social Impact Projects",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/faculties/feup/videos",
            "title": "Promotional Videos",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/faculties/feup/prospects",
            "title": "Future Plans",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`Faculty Menu screen tests calls componentDidUpdate without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FacultyMenu
    match={
      Object {
        "params": Object {
          "faculty": "feup",
        },
      }
    }
    resetProjects={[Function]}
    setFaculty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <MenuLink
          link="/faculties/feup/projects"
          title="Social Impact Projects"
        />,
        <MenuLink
          link="/faculties/feup/videos"
          title="Promotional Videos"
        />,
        <MenuLink
          link="/faculties/feup/prospects"
          title="Future Plans"
        />,
      ],
      "style": Object {
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-around",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/faculties/feup/projects",
          "title": "Social Impact Projects",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/faculties/feup/videos",
          "title": "Promotional Videos",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/faculties/feup/prospects",
          "title": "Future Plans",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <MenuLink
            link="/faculties/feup/projects"
            title="Social Impact Projects"
          />,
          <MenuLink
            link="/faculties/feup/videos"
            title="Promotional Videos"
          />,
          <MenuLink
            link="/faculties/feup/prospects"
            title="Future Plans"
          />,
        ],
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-around",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/faculties/feup/projects",
            "title": "Social Impact Projects",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/faculties/feup/videos",
            "title": "Promotional Videos",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/faculties/feup/prospects",
            "title": "Future Plans",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`Faculty Menu screen tests renders faculty menu screen 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(FacultyMenu)
    match={
      Object {
        "params": Object {
          "faculty": "feup",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "match": Object {
        "params": Object {
          "faculty": "feup",
        },
      },
      "resetProjects": [Function],
      "setFaculty": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "match": Object {
          "params": Object {
            "faculty": "feup",
          },
        },
        "resetProjects": [Function],
        "setFaculty": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
